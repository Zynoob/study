// Sizing shortcuts
@mixin size($w, $h: $w) {
  width: $w;
  height: $h;
}
 
// Easy and quick CSS positioning
@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and 
        $i + 1 <= length($args) and 
        type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}
 
// Positioning helpers
@mixin absolute($args: '') {
  @include position(absolute, $args);
}


// base size
$cw: 360px;
$mw: $cw / 10;

// multi shadows function
@function multi-shadows() {
  $shadow-list: (#333, #555, #777, #aaa);
  $shadows: ();
  @for $i from 1 through 4 {
    $shadows: append($shadows, 0 0 0 #{$i * $mw / 4} #{nth($shadow-list, $i)}, comma);
  }
  @return $shadows;
}

// draw mark
@function radiation() {
  $rad: (radial-gradient(circle closest-side, #fff 92%, transparent 0));
  @for $i from 1 through 180 {
    @if $i % 6 == 0 and $i % 30 != 0 {
      $rad: append($rad, repeating-linear-gradient(#{$i * 1deg}, transparent, transparent 50%, #ccc 0, #ccc calc(50% + 1px), transparent 0), comma)
    }
  }
  @for $j from 1 through 360 {
    @if $j % 30 == 0 {
      $rad: append($rad, repeating-linear-gradient(#{$j * 1deg}, transparent, transparent 50%, #000 0, #000 calc(50% + 1px), transparent 0), comma)
    }
  }
  @return $rad;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}


// clock face
.clock {
  @include size($cw);
  margin: $mw * 5 / 2 auto 0;
  position: relative;
  border-radius: 50%;
  // multi borders
  box-shadow: multi-shadows();
  // radial mark
  background-image: radiation();
}

// 1-12 time mark
.mark {
  @include absolute(top 0 left 0 right 0);
  margin: 0;
  padding: 0;
  list-style-type: none;
  
  > li {
    @include absolute(left 50% top $mw / 2);
    @include size($mw * 2, $mw);

    display: block;
    margin-left: -$mw;
    transform-origin: $mw ($cw - $mw) / 2;
    
    &::after {
      content: attr(data-time);
      text-align: center;
      font-size: $mw;
      line-height: 1;
      @include absolute(top 0 right 0 bottom 0 left 0);
    }
  }
  
  @for $time from 1 through 12 {
    > li:nth-child(#{$time}) {
      transform: rotate($time / 12 * 1turn);
      
      &::after {
        transform: rotate($time / 12 * -1turn)
      }
    }
  }
}

// hands group
.hand-wrap {
  @include absolute(top 0 right 0 bottom 50% left 50%);
  
  &::before {
    @include size($mw / 2);
    @include absolute(bottom $mw / -4 left $mw / -4);

    content: '';
    z-index: 50;
    display: block;
    background: silver;
    border-radius: 50%;
  }
}

// hour hand
.hand-hour {
  @include absolute(top 50% right 0 bottom 0 left -2px);

  z-index: 10;
  border-left: 5px solid blue;
  transform-origin: 2px bottom;
  animation: round linear infinite 60s * 60 * 12;
}

// minute hand
.hand-minute {
  @include absolute(top 25% right 0 bottom 0 left -1px);

  z-index: 20;
  border-left: 3px solid green;
  transform-origin: 1px bottom;
  animation: round linear infinite 60s * 60;
}

// second hand
.hand-second {
  @include absolute(top 5% right 0 bottom 0 left 0);

  z-index: 30;
  border-left: 1px solid red;
  transform-origin: left bottom;
  animation: round steps(60, end) infinite 60s;
}

// round keyframe
@keyframes round {
  to { transform: rotate(1turn) }
}